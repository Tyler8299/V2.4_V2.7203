[gcode_macro PROBE_CALIBRATE]
gcode:
    STATUS_CALIBRATING_Z
    CARTOGRAPHER_CALIBRATE

[gcode_macro PRINT_START]
gcode:
  M104 S195 ; set temporary nozzle temp to prevent oozing during homing and auto bed leveling
  G4 S10 ; allow partial nozzle warmup
  {% set BED_TEMP = params.BED_TEMP|default(55)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
  M140 S{BED_TEMP} ; Start bed heating
  G90 ; Use absolute coordinates
  SET_FAN_SPEED FAN=Nevermore SPEED=1.0
  STATUS_HOMING
  G28 ; Home all axes
  QUAD_GANTRY_LEVEL
  STATUS_LEVELING
  BED_MESH_CALIBRATE 
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X10 Y10 Z10 F5000.0 ; Move to start position
  STATUS_HEATING
  M190 S{BED_TEMP} ; Wait for bed to reach temperature
  M109 S{EXTRUDER_TEMP} ; Set and wait for nozzle to reach temperature
  STATUS_PRINTING
#  G1 Z0.28 F240
#  G92 E0
#  G1 Y140 E10 F1500 ; prime the nozzle
#  G1 X8 F5000
#  G92 E0
#  G1 Y10 E10 F1200 ; prime the nozzle
#  G92 E0

[gcode_macro PRINT_END]
gcode: 
    M140 S0
    M104 S0
    M106 S0
    M84 X Y E
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=900
    STATUS_PART_READY

[gcode_macro _HOME_X]
gcode:
    STATUS_HOMING
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.55 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-40 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    STATUS_HOMING
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.55 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-40 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Z]
gcode:
    STATUS_HOMING
    G90
    G28 Z
    G1 Z20
  
#[delayed_gcode DISABLEFILAMENTSENSOR]
#initial_duration: 1
#gcode:
#    SET_FILAMENT_SENSOR SENSOR=Toolhead ENABLE=0
#    SET_FILAMENT_SENSOR SENSOR=Extruder ENABLE=0
  
#[gcode_macro BED_MESH_CALIBRATE]
#rename_existing: _BED_MESH_CALIBRATE
#description: Perform Mesh Bed Leveling with klicky automount
#gcode:
#    {% set V = printer["gcode_macro _User_Variables"].verbose %}
#    {% if V %}
#        { action_respond_info("Bed Mesh Calibrate") }
#    {% endif %}
#
#    _CheckProbe action=query
#	G90
#    Attach_Probe
#    _KLICKY_STATUS_MESHING
#
#    _BED_MESH_CALIBRATE {% for p in params
#           %}{'%s=%s ' % (p, params[p])}{%
#          endfor %}
#
#    Dock_Probe

[gcode_macro PID_EXTRUDER]
description: PID Tune for the Extruder
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(260)|float %} 
  PID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG

[gcode_macro PID_BED]
description: PID Tune for the Bed
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(70)|float %} 
  PID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG

[gcode_macro G29]	
description: Bed Leveling
gcode: 
  STATUS_LEVELING
  G28
  bed_mesh_calibrate
  G1 X0 Y0 Z10 F4200

[gcode_macro Set_Z_Offset] ]
description: start process because I'm forgetful 
gcode:
    STATUS_CALIBRATING_Z
#    G28
    probe_calibrate

[gcode_macro CLEAN_NOZZLE]
gcode:
  SAVE_GCODE_STATE NAME=clean_nozzle_state
  G90
  G0 Z2 F5000
  G0 X205 Y307 F10000
  {% for wipe in range(6) %}
    {% for coordinate in [(208,307),(242,307)] %}
      G0 X{coordinate[0]} Y{coordinate[1] - 0 * wipe} Z2 F6000
    {% endfor %}
  {% endfor %}
  G0 X257 
  RESTORE_GCODE_STATE NAME=clean_nozzle_state
  
#[homing_override]
#axes: xyz
#set_position_z: 0
#gcode:
#  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
#  STATUS_HOMING
#  
#  {% if home_all or 'X' in params %}
#    G28 X
#  {% endif %}
#  
#  {% if home_all or 'Y' in params %}
#    G28 Y
#  {% endif %}
#  
#  {% if home_all or 'Z' in params %}
#    STATUS_CALIBRATING_Z
#    G90
#    G1 X151.5 Y150 Z10
#    G28 Z
#    G1 Z10
#  {% endif %}
#
#  {% if home_all %}
#    STATUS_READY
#  {% endif %}
  
    
#[gcode_macro G32]
#gcode:
#    STATUS_LEVELING
#    SAVE_GCODE_STATE NAME=STATE_G32
#    G90
#    G28
#    QUAD_GANTRY_LEVEL
#    G28
    
    
   
#    G0 X175 Y175 Z30 F3600
#    #--------------------------------------------------------------------
#    RESTORE_GCODE_STATE NAME=STATE_G32


[gcode_macro Carto_QGL] # safer and faster QGL for Cartographer
gcode:
     {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
    QUAD_GANTRY_LEVEL horizontal_move_z=10 retries=0 retry_tolerance=1.000
    QUAD_GANTRY_LEVEL horizontal_move_z=3
    G28 Z